//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\pratapa.ADS\source\repos\LlvmDSCompiler\LlvmDSCompiler\DesignScript.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LlvmDSCompiler {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="DesignScriptParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IDesignScriptVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>primaryExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpr([NotNull] DesignScriptParser.PrimaryExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>indexExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexExpr([NotNull] DesignScriptParser.IndexExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>repGuideExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepGuideExpr([NotNull] DesignScriptParser.RepGuideExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>atLevelExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtLevelExpr([NotNull] DesignScriptParser.AtLevelExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>funcCallExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncCallExpr([NotNull] DesignScriptParser.FuncCallExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>fieldExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldExpr([NotNull] DesignScriptParser.FieldExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpr([NotNull] DesignScriptParser.UnaryExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>mulDivModExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulDivModExpr([NotNull] DesignScriptParser.MulDivModExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>addSubExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddSubExpr([NotNull] DesignScriptParser.AddSubExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>compExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompExpr([NotNull] DesignScriptParser.CompExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>eqExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqExpr([NotNull] DesignScriptParser.EqExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>andExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpr([NotNull] DesignScriptParser.AndExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>orExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpr([NotNull] DesignScriptParser.OrExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>triRangeExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTriRangeExpr([NotNull] DesignScriptParser.TriRangeExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>unitRangeExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnitRangeExpr([NotNull] DesignScriptParser.UnitRangeExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>inlineConditionExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInlineConditionExpr([NotNull] DesignScriptParser.InlineConditionExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parenExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenExpr([NotNull] DesignScriptParser.ParenExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>litExpr</c>
	/// labeled alternative in <see cref="DesignScriptParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLitExpr([NotNull] DesignScriptParser.LitExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ident</c>
	/// labeled alternative in <see cref="DesignScriptParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdent([NotNull] DesignScriptParser.IdentContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>doubleLit</c>
	/// labeled alternative in <see cref="DesignScriptParser.lit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoubleLit([NotNull] DesignScriptParser.DoubleLitContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>intLit</c>
	/// labeled alternative in <see cref="DesignScriptParser.lit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntLit([NotNull] DesignScriptParser.IntLitContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>stringLit</c>
	/// labeled alternative in <see cref="DesignScriptParser.lit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringLit([NotNull] DesignScriptParser.StringLitContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>boolLit</c>
	/// labeled alternative in <see cref="DesignScriptParser.lit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolLit([NotNull] DesignScriptParser.BoolLitContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>nullLit</c>
	/// labeled alternative in <see cref="DesignScriptParser.lit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullLit([NotNull] DesignScriptParser.NullLitContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>listLit</c>
	/// labeled alternative in <see cref="DesignScriptParser.lit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListLit([NotNull] DesignScriptParser.ListLitContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>dictLit</c>
	/// labeled alternative in <see cref="DesignScriptParser.lit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDictLit([NotNull] DesignScriptParser.DictLitContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>imperCoreStmt</c>
	/// labeled alternative in <see cref="DesignScriptParser.imperStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImperCoreStmt([NotNull] DesignScriptParser.ImperCoreStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ifStmt</c>
	/// labeled alternative in <see cref="DesignScriptParser.imperStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStmt([NotNull] DesignScriptParser.IfStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>forStmt</c>
	/// labeled alternative in <see cref="DesignScriptParser.imperStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStmt([NotNull] DesignScriptParser.ForStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>whileStmt</c>
	/// labeled alternative in <see cref="DesignScriptParser.imperStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStmt([NotNull] DesignScriptParser.WhileStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>breakStmt</c>
	/// labeled alternative in <see cref="DesignScriptParser.imperStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStmt([NotNull] DesignScriptParser.BreakStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>continueStmt</c>
	/// labeled alternative in <see cref="DesignScriptParser.imperStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStmt([NotNull] DesignScriptParser.ContinueStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>blockStmt</c>
	/// labeled alternative in <see cref="DesignScriptParser.imperStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockStmt([NotNull] DesignScriptParser.BlockStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>typeNameArbitraryRank</c>
	/// labeled alternative in <see cref="DesignScriptParser.typeNameWithRank"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeNameArbitraryRank([NotNull] DesignScriptParser.TypeNameArbitraryRankContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>typeNameRankOneOrMore</c>
	/// labeled alternative in <see cref="DesignScriptParser.typeNameWithRank"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeNameRankOneOrMore([NotNull] DesignScriptParser.TypeNameRankOneOrMoreContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>typeNameRank</c>
	/// labeled alternative in <see cref="DesignScriptParser.typeNameWithRank"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeNameRank([NotNull] DesignScriptParser.TypeNameRankContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] DesignScriptParser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.coreStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCoreStmt([NotNull] DesignScriptParser.CoreStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.funcDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncDef([NotNull] DesignScriptParser.FuncDefContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.imperFuncDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImperFuncDef([NotNull] DesignScriptParser.ImperFuncDefContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.emptyStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmptyStmt([NotNull] DesignScriptParser.EmptyStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.funcDefArgList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncDefArgList([NotNull] DesignScriptParser.FuncDefArgListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.funcDefArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncDefArg([NotNull] DesignScriptParser.FuncDefArgContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] DesignScriptParser.ExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary([NotNull] DesignScriptParser.PrimaryContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.parExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParExpr([NotNull] DesignScriptParser.ParExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.lit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLit([NotNull] DesignScriptParser.LitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprList([NotNull] DesignScriptParser.ExprListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.atLevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtLevel([NotNull] DesignScriptParser.AtLevelContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.repGuideList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepGuideList([NotNull] DesignScriptParser.RepGuideListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.exprStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprStmt([NotNull] DesignScriptParser.ExprStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStmt([NotNull] DesignScriptParser.ReturnStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.imperAnnot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImperAnnot([NotNull] DesignScriptParser.ImperAnnotContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.imperBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImperBlock([NotNull] DesignScriptParser.ImperBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.imperBlockReturnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImperBlockReturnStmt([NotNull] DesignScriptParser.ImperBlockReturnStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.imperBlockAssignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImperBlockAssignStmt([NotNull] DesignScriptParser.ImperBlockAssignStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.imperBlockBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImperBlockBody([NotNull] DesignScriptParser.ImperBlockBodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.imperStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImperStmt([NotNull] DesignScriptParser.ImperStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignStmt([NotNull] DesignScriptParser.AssignStmtContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.typedIdent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypedIdent([NotNull] DesignScriptParser.TypedIdentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.keyValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyValue([NotNull] DesignScriptParser.KeyValueContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.keyValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyValues([NotNull] DesignScriptParser.KeyValuesContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.typedIdentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypedIdentList([NotNull] DesignScriptParser.TypedIdentListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.identList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentList([NotNull] DesignScriptParser.IdentListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.qualifiedIdent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedIdent([NotNull] DesignScriptParser.QualifiedIdentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.typeNameWithRank"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeNameWithRank([NotNull] DesignScriptParser.TypeNameWithRankContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DesignScriptParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeName([NotNull] DesignScriptParser.TypeNameContext context);
}
} // namespace LlvmDSCompiler
